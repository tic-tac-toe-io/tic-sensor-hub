
#
# Web (expressjs) settings.
#
web:
  port: 7000
  api: [3, 1]
  upload_storage: memory
  upload_path: "{{work_dir}}/web/upload/{{process_name}}"

#
# DO NOT USE any handlebars template variables (e.g. process_name) in logger
# section because they are never merged.
#
logger:
  rotating_file_stream:
    period: daily
    threshold: 1g     # The maximum size for a log file to reach before it's rotated.
    totalFiles: 60    # Keep 60 days (2 months) of log files.


#
# Transform from DGv1 schema (board_type/board_id/sensor: type) to
# DGv3 schema (p_type/p_id/s_type/s_id: {type1, type2, ...})
#
1to3:
  verbose: false


#
# Legacy REST api for TOE v1.0: `/api/v1/hub/:id/:profile` (POST)
#
webapi-legacy:
  enabled: false


#
# REST api endpoint to receive sensor data from HTTP forwarder of another
# instance of SensorHub.
#
webapi-hook:
  enabled: true


#
# REST api endpoint to receive sensor data archive from devices with TOE3.0+.
#
webapi-upload:
  enabled: true
  # When timezone is not specified in query string, use this setting
  # as default value.
  timezone: Asia/Taipei


#
# Use `request` module to forward Time-series data points (measurements) to
# next http server. There are 2 ways of using HTTP POST to send these data
# points to next http server:
#
# 1. Send as HTTP body in JSON format without GZ compression.
# 2. Send sa a JSON file in HTTP Form (multiparts) with GZ compression.
#
http-forwarder:
  verbose: false
  destinations:
    - name: test1
      enabled: false
      url: http://localhost:9999/a/b/c
      compressed: false
      health_check: false
      url_append: false
      request_opts:
        auth: {user: 'aaa', password: 'bbbb'}

    - name: test2
      enabled: true
      url: http://localhost:9998/x/y/z
      compressed: true
      matched_profiles: '^(foop|conscious)$'
      matched_ids: '*'
      health_check: false
      url_append: true
      request_opts:
        qs: {token: 'XXX'}

    - name: test3
      enabled: false
      url: http://localhost:9998/x/y/z
      compressed: true
      matched_profiles: '*'
      matched_ids: '1803S320005[0-9]'
      health_check: true
      url_append: true
      request_opts:
        qs: {token: 'XXX'}


broker-manager:
  verbose: false
  destinations:
    test0:
      type: filesystem
      enabled: true
      behaviors:
        health_check: false
        queue_if_unavailable: false
      filter:
        matched_profiles: '*'
        matched_ids: '*'
        matched_peripheral_types: '*'
        matched_sensor_types: '*'
      broker:
        path: "{{work_dir}}/web/brokers/test0"
        flush_threashold: 2

    test1:
      type: influxdb-1x-writer
      enabled: false
      behaviors:
        health_check: false
        queue_if_unavailable: false
      filter:
        matched_profiles: '*'
        matched_ids: '*'
        matched_peripheral_types: '*'
        matched_sensor_types: '*'
      broker:
        url: http://localhost:8086
        username: root
        password: root

    test2:
      type: http-forwarder
      enabled: false
      behaviors:
        health_check: false
        queue_if_unavailable: false
      filter:
        matched_profiles: '*'
        matched_ids: '*'
        matched_peripheral_types: '*'
        matched_sensor_types: '*'
      broker:
        url: http://localhost:9999/a/b/c
        compressed: false
        url_append: false





#
# Implement LINE-protocol (https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/)
# to write time-series data to InfluxDB v1.x, and also uses stats api (https://docs.influxdata.com/influxdb/v1.7/administration/server_monitoring/#show-stats)
# to check destination's health.
#
influxdb-1x-writer:
  verbose: false
  destinations:
    - name: test1
      enabled: true
      url: http://localhost:8086
      filter:
        matched_profiles: '*'
        matched_ids: '1803S320005[0-9]'
        matched_peripheral_types: '*'
        matched_sensor_types: '*'
      health_check: true
      opts: {}

    - name: test2
      enabled: false
      url: https://ifdb991.cestec.jp
      filter:
        matched_profiles: '*'
        matched_ids: '1803S320005[0-9]'
        matched_peripheral_types: '*'
        matched_sensor_types: '*'
      health_check: true
      opts: {}
